 Ainda não tem o PIR ou driver do IR.

 Então 

 VAI TER UMA MÁQUINA DE ESTADO
 (DESARMADO, ARMADO, DISPARANDO, VERIFICASENHA) ou mais estados

 4 botões.

 1º BTN INCREMENTA LED (CONTADOR ) CNT +'1'
 - Conforme vai clicando vai preenchendo os led de 1 a 4 e conforme cada 1 ligado é código binário "1111" = 15 decimal
 2º BTN ARMAR (Sem senha) 
 3º BTN SIMULA O PIR ( DISPARA O BUZZER)
 

 
 4º BTN DESARMAR (Com senha)

 - Clicou em BTN 3 (armou) 
 - Clicou em BTN 4 (Verifica o número que está armazenado no CONTADOR que passa pelo Debounce é == ao signal que foi armazenado a senha) 

CONSTANT SENHA : STD_LOGIC_VECTOR (15 DOWNTO 0) := "1101";


 FSM cria SIGNAL ESTADOANTERIOR = '0' É ARMADO / '1'DISPARANDO

teste pull

- > Estado DESARMADO:
DEFAULT
DESLIGA LED
DESLIGA BUZZER

-----
--passa pelo debouncer
 (IF BOTÃO 2 CLIQUE ) THEN
-> ESTADO ARMADO
LED 1 87 FICA PISCANDO

-------------
IF (SENHA (botão btn1 clicou)) THEN
ESTADOANTERIOR <= 0
FSM <= VERIFICASENHA
-----
MONITORA SENSOR DE PRESENÇA (BOTÃO POR ENQUANTO)
IF(btn3 SENSOR CAPTURA MOVIMENTO) THEN
FSM <= DISPARANDO



-> DISPARANDO
 LIGA BUZZER
TODOS OS LED FICAM PISCANDO

IF (SENHA (botão btn1 clicou)) THEN
ESTADOANTERIOR <= 1
FSM <= VERIFICASENHA


-> estado VERIFICASENHA THEN
desliga os led E -> 
chamar metódo que mostra o numero decimal em bit nos LED até a confirmação da senha

IF(SENHA btn4 CERTA) THEN
FSM <= DESARMADO
else
limpa led e faz led 1 voltar a piscar
IF(ESTADOANTERIOR == 0) THEN
FSM <= ARMADO
ELSE FSM <= DISPARANDO ENDIF;
ENDIF;


